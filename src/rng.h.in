#ifndef RNG_H
#define RNG_H

#define RNG_DSFMT       0
#define RNG_MT19937     1
#define RNG_TAUS2       2
#define RNG_GFSR4       3

#define RNG @RNG@

#if RNG == RNG_DSFMT

#include "dSFMT.h"
typedef dsfmt_t rng;
#define RNG_ALLOC()         malloc(sizeof(rng))
#define RNG_SEED(r, seed)   dsfmt_init_gen_rand(r, seed)
#define RNG_UNIFORM(r)      dsfmt_genrand_close_open(r)
#define RNG_FREE(r)         free(r)

#else

/* use an RNG from the GSL... */

#include "gsl_rng.h"

/* XXX Hack because gsl_randist uses `N` as variable... */
#undef N
#include "gsl_randist.h"
#define N @N@

typedef gsl_rng rng;
#if   RNG == RNG_MT19937
#define RNG_TYPE gsl_rng_mt19937
#elif RNG == RNG_TAUS2
#define RNG_TYPE gsl_rng_taus2
#elif RNG == RNG_GFSR4
#define RNG_TYPE gsl_rng_gfsr4
#endif

#define RNG_ALLOC()         gsl_rng_alloc(RNG_TYPE)
#define RNG_SEED(r, seed)   gsl_rng_set(r, seed)
#define RNG_UNIFORM(r)      gsl_rng_uniform(r)
#define RNG_GAUSS(r, sigma) gsl_ran_gaussian(r, sigma)
#define RNG_FREE(r)         gsl_rng_free(r)

#endif  /* GSL RNGs*/
#endif  /* ifndef RNG_H */
